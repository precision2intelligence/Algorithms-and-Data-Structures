def simplifyPath(path):#比较全面的考虑，但是有错误
        # Write your code here
        if path == None:#为空跳出
            return None
        p = path.split("/")
        stack = []
        for s in p:#p已经是一个数组了，数组无下标也可以遍历。但在排序中经常要计数，所以不采用
            if s == '.' or len(s)==0:
                continue#代替一条执行语句
            elif s == '..':
                if len(stack)!=0:
                    stack.pop()#FILO
            else:
                stack.append(s)#这里不对！！！因为最开始和结束的‘/’及‘///’都能划分出空格，这里把空格考虑进去是错误的！！
        res = ""#创建一个字符串
        if len(stack)==0:#考虑进去/./././.的情况了
            return "/"
        for i in stack:#依旧不是计数，直接遍历
            res += "/"+i#字符串的填充
        return res 
        
        
        
        
        _____________________________________2nd_________________________________________
        
        def simplifyPath(path):  
        """ 
        :type path: str 
        :rtype: str 
        """  
        path_array = path.split("/")  
        stack = []  
        res_path = ""  
        for item in path_array:  
            if item not in ["",".",".."]:  #这里考虑了‘/’在开头和结尾及‘///’的情况，是正确答案
                stack.append(item)   
            if ".." == item and stack:   
                stack.pop(-1)  
        if []==stack:   
            return "/"  
        for item in stack:  
            res_path += "/"+item + ""  
        return res_path  
